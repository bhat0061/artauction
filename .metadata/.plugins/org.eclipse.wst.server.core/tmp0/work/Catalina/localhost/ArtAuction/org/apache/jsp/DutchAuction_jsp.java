/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2015-12-01 14:44:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Currency;
import java.text.NumberFormat;
import Data.Bid;
import Data.Account;
import Data.DutchAuction;
import Handler.AuctionHandler;
import java.util.ResourceBundle;
import Handler.CreditCardHandler;

public final class DutchAuction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Handler.CreditCardHandler");
    _jspx_imports_classes.add("Data.Bid");
    _jspx_imports_classes.add("java.util.ResourceBundle");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("Data.Account");
    _jspx_imports_classes.add("Data.DutchAuction");
    _jspx_imports_classes.add("Handler.AuctionHandler");
    _jspx_imports_classes.add("java.util.Currency");
    _jspx_imports_classes.add("java.util.LinkedList");
    _jspx_imports_classes.add("java.text.NumberFormat");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");

	//Check client session
	request.getSession(false);
	if (session == null || session.getAttribute("account") == null){
		session.setAttribute("redirectLink", "index.jsp");
		session.setAttribute("redirectMsg", "You are currently not signed in, please sign in before viewing this page. Redirecting you home shortly.");
		response.sendRedirect("redirect.jsp");		
	}
	 
	@SuppressWarnings("unchecked")
	LinkedList<Bid> allBids = (LinkedList<Bid>)session.getAttribute("AllBids");
	DutchAuction auction = (DutchAuction)session.getAttribute("Auction");
//	Bid bid1  = (Bid)session.getAttribute("Bid");
	String lang;
	if(session==null || session.getAttribute("language") == null )
		lang = "Language.lang_en_ca";
	else
		lang = session.getAttribute("language").toString();
	ResourceBundle resource = ResourceBundle.getBundle(lang);
	AuctionHandler handler = new AuctionHandler();
	

      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"\">\r\n");
      out.write("\r\n");
      out.write("    <title>Auction Listing</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap Core CSS -->\r\n");
      out.write("    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Custom CSS -->\r\n");
      out.write("    <link href=\"css/heroic-features.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\tfunction initBid() {\r\n");
      out.write("\t\t\t\t$('#updateBid').load('UpdateBidServlet?auctid=");
      out.print(auction.getId());
      out.write("');\r\n");
      out.write("\t\t\t\tsetTimeout(initBid, 5000);\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tinitBid();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<body> \r\n");
      out.write("\t <!-- Navigation -->\r\n");
      out.write("    <nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("            <div class=\"navbar-header\">\r\n");
      out.write("                <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("                    <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                </button>\r\n");
      out.write("                <a class=\"navbar-brand\" href=\"auctionlist.jsp\">Auction Site</a>\r\n");
      out.write("\t\t\t\t<ul class=\"nav navbar-nav\">\r\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("            <!-- /.navbar-collapse -->\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- /.container -->\r\n");
      out.write("    </nav>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("\t    <div class=\"row\">\r\n");
      out.write("\t        <div class=\"col-lg-6 col-md-offset-4\">\r\n");
      out.write("\t        \t<h2>");
      out.print(auction.getTitle());
      out.write("</h2>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t   </div>\r\n");
      out.write("\t   <hr>\r\n");
      out.write("\t\t<div id=\"ImageAuction\" style=\"width:400px;height:300px;content-align:center;margin-left:auto;margin-right:auto;\">\r\n");
      out.write("\t   \t\t<img src=\"/ArtAuction/Image?id=");
      out.print(auction.getImageid());
      out.write("\" width=\"400px\" height=\"300px\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<h3><span class=\"text-center\">");
      out.print(auction.getDescription());
      out.write("</span></h3>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<h3 style=\"display: inline\">");
      out.print(resource.getString("price"));
      out.write(": </h3><h3 style=\"display: inline\" id=\"updateBid\"></h3>\r\n");
      out.write("\t\t<div id=\"clockdiv\">\r\n");
      out.write("\t\t  <div>\r\n");
      out.write("\t\t  \t<h3>\r\n");
      out.write("\t\t\t    Days Left: <span class=\"days\"> </span><br/>\r\n");
      out.write("\t\t\t    Time Left: <span class=\"hours\"></span> :\r\n");
      out.write("\t\t\t    <span class=\"minutes\"></span> :\r\n");
      out.write("\t\t\t    <span class=\"seconds\"></span>\r\n");
      out.write("\t\t\t</h3>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t");
if((((Account)session.getAttribute("account")).isAdmin() && !auction.isApproved())){
			out.println("<a class=\"btn btn-primary\" role=\"Button\" href=\"/ArtAuction/ApproveDutchAuctionServlet\">"+resource.getString("accept")+"</a>");
			out.println("<a class=\"btn btn-primary\" role=\"Button\" href=\"/ArtAuction/RejectDutchAuctionServlet\">"+resource.getString("reject")+"</a>");
		}else if(((Account)session.getAttribute("account")).getId() != auction.getAccountid()){
		
      out.write("\r\n");
      out.write("\t\t<form action=\"BuyOutServlet\" method=\"POST\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"accountid\" value='");
      out.print(((Account)session.getAttribute("account")).getId());
      out.write("'>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"auctionid\" value='");
      out.print(auction.getId());
      out.write("'>\r\n");
      out.write("\t\t\t<button type=\"submit\" id=\"buynow\" class=\"btn btn-info btn-lg\">");
      out.print(resource.getString("buyNow"));
      out.write("</button>\r\n");
      out.write("\t\t</form> \r\n");
      out.write("\t\t");

		Account acc = ((Account)session.getAttribute("account"));
				if(!CreditCardHandler.verifyUserCard(acc.getId())) { 
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<script>  \r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"buynow\").disabled = true; \r\n");
      out.write("\t\t\t\t\t</script> \r\n");
      out.write("\t\t\t\t\t<h3>Please enter a credit card to bid! </h3>\r\n");
      out.write("\t\t\t");
 }
		}
      out.write("\r\n");
      out.write("\t\t \r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- jQuery -->\r\n");
      out.write("    <script src=\"js/jquery.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap Core JavaScript -->\r\n");
      out.write("    <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("function getTimeRemaining(endtime){\r\n");
      out.write("\t  var t = Date.parse(endtime) - Date.parse(new Date());\r\n");
      out.write("\t  var seconds = Math.floor( (t/1000) % 60 );\r\n");
      out.write("\t  var minutes = Math.floor( (t/1000/60) % 60 );\r\n");
      out.write("\t  var hours = Math.floor( (t/(1000*60*60)) % 24 );\r\n");
      out.write("\t  var days = Math.floor( t/(1000*60*60*24) );\r\n");
      out.write("\t  return {\r\n");
      out.write("\t    'total': t,\r\n");
      out.write("\t    'days': days,\r\n");
      out.write("\t    'hours': hours,\r\n");
      out.write("\t    'minutes': minutes,\r\n");
      out.write("\t    'seconds': seconds\r\n");
      out.write("\t  };\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction initializeClock(id, endtime){\r\n");
      out.write("\t  var clock = document.getElementById(id);\r\n");
      out.write("\t  var daysSpan = clock.querySelector('.days');\r\n");
      out.write("\t  var hoursSpan = clock.querySelector('.hours');\r\n");
      out.write("\t  var minutesSpan = clock.querySelector('.minutes');\r\n");
      out.write("\t  var secondsSpan = clock.querySelector('.seconds');\r\n");
      out.write("\r\n");
      out.write("\t  function updateClock(){\r\n");
      out.write("\t    var t = getTimeRemaining(endtime);\r\n");
      out.write("\r\n");
      out.write("\t    daysSpan.innerHTML = t.days;\r\n");
      out.write("\t    hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\r\n");
      out.write("\t    minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\r\n");
      out.write("\t    secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\r\n");
      out.write("\r\n");
      out.write("\t    if(t.total<=0){\r\n");
      out.write("\t      clearInterval(timeinterval);\r\n");
      out.write("\t    }\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t  updateClock();\r\n");
      out.write("\t  var timeinterval = setInterval(updateClock,1000);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tvar deadline = '");
      out.print( session.getAttribute("EndTime") );
      out.write("';\r\n");
      out.write("\tinitializeClock('clockdiv', deadline);\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
